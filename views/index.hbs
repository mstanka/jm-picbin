<div class="container">
  
  <section class="section__intro">
    <h1>Pic Ninja</h1>
    <div class="main__image">
      <img src="/img/undraw_image_focus.svg" alt="Pic Image" class="main__image-img">
    </div>
  </section>      
 
  <section class="section__upload"> 
    <form id="upload-form" action="https://picninja-upload.azurewebsites.net/api/files2" method="POST" enctype="multipart/form-data">
      <div class="drop-zone">
        <span class="drop-zone__prompt">Drop file here or click to upload</span>
        <input type="file" name="image" class="drop-zone__input" id="file-picker" accept="image/*">
      </div>      
      <button class="btn btn-primary" id="submit-btn" type="submit">Upload file</button>
      <p id="message" class="file-upload__label">{{message}}</p>
    </form>
  </section> 

  <section class="section__about">
    <h2 class="section__about-title">About Pic Ninja</h2>
    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit omnis, recusandae blanditiis soluta suscipit voluptatibus quo eos sunt tempore esse odio natus aut, excepturi repellat voluptates debitis voluptatum exercitationem molestias.</p>
    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Corporis, atque.</p>
    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem sed voluptatum odit corporis fugiat facilis quidem atque magnam quia? Quas.</p>
  </section> 

  <section class="section__contact">
    <a href="https://www.facebook.com/" aria-label="facebook"><i class="fab fa-facebook"></i></a>
    <a href="https://twitter.com/" aria-label="twitter"><i class="fab fa-twitter"></i></a>
    <a href="https://www.instagram.com/" aria-label="instagram"><i class="fab fa-instagram"></i></a>
  </section> 
</div> 
  

<script>
  document.addEventListener('DOMContentLoaded', () => {

    const message = document.getElementById('message');
    const picker = document.getElementById('file-picker');
    const button = document.getElementById('submit-btn');
    const label = button.parentElement.querySelector('.file-upload__label');
    const defaultLabelText = 'No file(s) selected';  
    const dropZoneElement = picker.closest(".drop-zone");

    dropZoneElement.addEventListener("click", (e) => {
      picker.click();
    });

    picker.addEventListener("change", (e) => {
      if (picker.files.length) {
        updateThumbnail(dropZoneElement, picker.files[0]);
      }
    });

    // add class 'drop-zone--over' when file is over the dragzone
    dropZoneElement.addEventListener("dragover", (e) => {
      e.preventDefault();
      dropZoneElement.classList.add("drop-zone--over");
    });

    // remove class 'drop-zone--over' when file is not over the dragzone
    ["dragleave", "dragend"].forEach((type) => {
      dropZoneElement.addEventListener(type, (e) => {
        dropZoneElement.classList.remove("drop-zone--over");
      });
    });

    // drop the file 
    dropZoneElement.addEventListener("drop", (e) => {
      e.preventDefault();
      e.stopPropagation()

      if (e.dataTransfer.files.length) {
        picker.files = e.dataTransfer.files;
        updateThumbnail(dropZoneElement, e.dataTransfer.files[0]);
      }

      dropZoneElement.classList.remove("drop-zone--over");
    });

    document.getElementById('upload-form').addEventListener('submit', (e) => {

      message.innerText = '';

      if (!picker.files.length) {
        message.innerText = 'Please select an image to upload.';
        e.preventDefault();
        return false;
      }
    });    
    
    /**
     * Updates the thumbnail on a drop zone element.
     *
     * @param {HTMLElement} dropZoneElement
     * @param {File} file
     */
     

    // update thumbnail
    function updateThumbnail(dropZoneElement, file) {
      let thumbnailElement = dropZoneElement.querySelector(".drop-zone__thumb");

      // First time - remove the prompt
      if (dropZoneElement.querySelector(".drop-zone__prompt")) {
        dropZoneElement.querySelector(".drop-zone__prompt").remove();
      }

      // First time - there is no thumbnail element, so lets create it
      if (!thumbnailElement) {
        thumbnailElement = document.createElement("div");
        thumbnailElement.classList.add("drop-zone__thumb");
        dropZoneElement.appendChild(thumbnailElement);
      }

      thumbnailElement.dataset.label = file.name;

      // Show thumbnail for image files
      if (file.type.startsWith("image/")) {
        const reader = new FileReader();

        reader.readAsDataURL(file);
        reader.onload = () => {
          thumbnailElement.style.backgroundImage = `url('${reader.result}')`;
        };
      } else {
        thumbnailElement.style.backgroundImage = null;
      }
    }
       
  });
</script>
